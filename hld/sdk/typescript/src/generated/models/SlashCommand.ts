/* tslint:disable */
/* eslint-disable */
/**
 * HumanLayer Daemon REST API
 * REST API for HumanLayer daemon operations, providing session management, approval workflows, and real-time event streaming capabilities. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SlashCommand
 */
export interface SlashCommand {
    /**
     * Command name including slash prefix
     * @type {string}
     * @memberof SlashCommand
     */
    name: string;
    /**
     * Source of the command - local (repo) or global (user home)
     * @type {string}
     * @memberof SlashCommand
     */
    source: SlashCommandSourceEnum;
}


/**
 * @export
 */
export const SlashCommandSourceEnum = {
    Local: 'local',
    Global: 'global'
} as const;
export type SlashCommandSourceEnum = typeof SlashCommandSourceEnum[keyof typeof SlashCommandSourceEnum];


/**
 * Check if a given object implements the SlashCommand interface.
 */
export function instanceOfSlashCommand(value: object): value is SlashCommand {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    return true;
}

export function SlashCommandFromJSON(json: any): SlashCommand {
    return SlashCommandFromJSONTyped(json, false);
}

export function SlashCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): SlashCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'source': json['source'],
    };
}

export function SlashCommandToJSON(json: any): SlashCommand {
    return SlashCommandToJSONTyped(json, false);
}

export function SlashCommandToJSONTyped(value?: SlashCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'source': value['source'],
    };
}

