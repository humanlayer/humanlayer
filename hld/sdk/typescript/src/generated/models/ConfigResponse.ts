/* tslint:disable */
/* eslint-disable */
/**
 * HumanLayer Daemon REST API
 * REST API for HumanLayer daemon operations, providing session management, approval workflows, and real-time event streaming capabilities. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConfigResponse
 */
export interface ConfigResponse {
    /**
     * Currently configured Claude path
     * @type {string}
     * @memberof ConfigResponse
     */
    claudePath: string;
    /**
     * Automatically detected Claude path (may differ from configured)
     * @type {string}
     * @memberof ConfigResponse
     */
    claudeDetectedPath?: string;
    /**
     * Whether Claude is available at the configured path
     * @type {boolean}
     * @memberof ConfigResponse
     */
    claudeAvailable: boolean;
}

/**
 * Check if a given object implements the ConfigResponse interface.
 */
export function instanceOfConfigResponse(value: object): value is ConfigResponse {
    if (!('claudePath' in value) || value['claudePath'] === undefined) return false;
    if (!('claudeAvailable' in value) || value['claudeAvailable'] === undefined) return false;
    return true;
}

export function ConfigResponseFromJSON(json: any): ConfigResponse {
    return ConfigResponseFromJSONTyped(json, false);
}

export function ConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'claudePath': json['claude_path'],
        'claudeDetectedPath': json['claude_detected_path'] == null ? undefined : json['claude_detected_path'],
        'claudeAvailable': json['claude_available'],
    };
}

export function ConfigResponseToJSON(json: any): ConfigResponse {
    return ConfigResponseToJSONTyped(json, false);
}

export function ConfigResponseToJSONTyped(value?: ConfigResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'claude_path': value['claudePath'],
        'claude_detected_path': value['claudeDetectedPath'],
        'claude_available': value['claudeAvailable'],
    };
}

