/* tslint:disable */
/* eslint-disable */
/**
 * HumanLayer Daemon REST API
 * REST API for HumanLayer daemon operations, providing session management, approval workflows, and real-time event streaming capabilities.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Session counts by category
 * @export
 * @interface SessionsResponseCounts
 */
export interface SessionsResponseCounts {
    /**
     * Number of normal (non-archived, non-draft) sessions
     * @type {number}
     * @memberof SessionsResponseCounts
     */
    normal?: number;
    /**
     * Number of archived sessions
     * @type {number}
     * @memberof SessionsResponseCounts
     */
    archived?: number;
    /**
     * Number of draft sessions
     * @type {number}
     * @memberof SessionsResponseCounts
     */
    draft?: number;
}

/**
 * Check if a given object implements the SessionsResponseCounts interface.
 */
export function instanceOfSessionsResponseCounts(value: object): value is SessionsResponseCounts {
    return true;
}

export function SessionsResponseCountsFromJSON(json: any): SessionsResponseCounts {
    return SessionsResponseCountsFromJSONTyped(json, false);
}

export function SessionsResponseCountsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionsResponseCounts {
    if (json == null) {
        return json;
    }
    return {

        'normal': json['normal'] == null ? undefined : json['normal'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'draft': json['draft'] == null ? undefined : json['draft'],
    };
}

export function SessionsResponseCountsToJSON(json: any): SessionsResponseCounts {
    return SessionsResponseCountsToJSONTyped(json, false);
}

export function SessionsResponseCountsToJSONTyped(value?: SessionsResponseCounts | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'normal': value['normal'],
        'archived': value['archived'],
        'draft': value['draft'],
    };
}
