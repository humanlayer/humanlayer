/* tslint:disable */
/* eslint-disable */
/**
 * HumanLayer Daemon REST API
 * REST API for HumanLayer daemon operations, providing session management, approval workflows, and real-time event streaming capabilities.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HealthResponseDependencies } from './HealthResponseDependencies';
import {
    HealthResponseDependenciesFromJSON,
    HealthResponseDependenciesFromJSONTyped,
    HealthResponseDependenciesToJSON,
    HealthResponseDependenciesToJSONTyped,
} from './HealthResponseDependencies';

/**
 *
 * @export
 * @interface HealthResponse
 */
export interface HealthResponse {
    /**
     *
     * @type {string}
     * @memberof HealthResponse
     */
    status: HealthResponseStatusEnum;
    /**
     *
     * @type {string}
     * @memberof HealthResponse
     */
    version: string;
    /**
     *
     * @type {HealthResponseDependencies}
     * @memberof HealthResponse
     */
    dependencies?: HealthResponseDependencies;
}


/**
 * @export
 */
export const HealthResponseStatusEnum = {
    Ok: 'ok',
    Degraded: 'degraded'
} as const;
export type HealthResponseStatusEnum = typeof HealthResponseStatusEnum[keyof typeof HealthResponseStatusEnum];


/**
 * Check if a given object implements the HealthResponse interface.
 */
export function instanceOfHealthResponse(value: object): value is HealthResponse {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function HealthResponseFromJSON(json: any): HealthResponse {
    return HealthResponseFromJSONTyped(json, false);
}

export function HealthResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthResponse {
    if (json == null) {
        return json;
    }
    return {

        'status': json['status'],
        'version': json['version'],
        'dependencies': json['dependencies'] == null ? undefined : HealthResponseDependenciesFromJSON(json['dependencies']),
    };
}

export function HealthResponseToJSON(json: any): HealthResponse {
    return HealthResponseToJSONTyped(json, false);
}

export function HealthResponseToJSONTyped(value?: HealthResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'status': value['status'],
        'version': value['version'],
        'dependencies': HealthResponseDependenciesToJSON(value['dependencies']),
    };
}
